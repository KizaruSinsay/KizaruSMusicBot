# Daisyxmusic (Telegram bot project )
# Copyright (C) 2021  Inukaasith 

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.




from callsmusic.callsmusic import client as USER
from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import UserAlreadyParticipant
from helpers.decorators import errors, authorized_users_only

@Client.on_message(filters.group & filters.command(["userbotjoin"]))
@authorized_users_only
@errors
async def addchannel(client, message):
    chid = message.chat.id
    try:
        invitelink = await client.export_chat_invite_link(chid)
    except:
        await message.reply_text(
            "<b>–î–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –≤ –≤–∞—à–µ–º –∫–∞–Ω–∞–ª–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞</b>",
        )
        return

    try:
        user = await USER.get_me()
    except:
        user.first_name =  "KizaruSinsayMusic"

    try:
        await USER.join_chat(invitelink)
        await USER.send_message(message.chat.id,"–Ø –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è —Å—é–¥–∞ –ø–æ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ")
    except UserAlreadyParticipant:
        await message.reply_text(
            "<b>–ø–æ–º–æ—â–Ω–∏–∫ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–µ–Ω–∏—é –≤ –≤–∞—à–µ–º—É —á–∞—Ç—É</b>",
        )
        pass
    except Exception as e:
        print(e)
        await message.reply_text(
            f"<b>üõë –û—à–∏–±–∫–∞, –æ–∂–∏–¥–∞–µ—Ç —Å–ø–∞–¥–∞ —Ñ–ª—É–¥–∞ üõë \n –£—á–∞—Å—Ç–Ω–∏–∫ {user.first_name} –Ω–µ —Å–º–æ–≥ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —é–∑–µ—Ä –±–æ—Ç–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, —Ä–∞–∑–±–∞–Ω—å—Ç–µ —é–∑–µ—Ä –±–æ—Ç–∞ –µ—Å–ª–∏ –æ–Ω —Ç–∞–º."
            "\n\nOr manually add @DaisyXhelper to your Group and try again</b>",
        )
        return
    await message.reply_text(
            "<b>–ø–æ–º–æ—â–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ –≤–∞—à–µ–º—É —á–∞—Ç—É</b>",
        )
    
@USER.on_message(filters.group & filters.command(["userbotleave"]))
async def rem(USER, message):
    try:
        await USER.leave_chat(message.chat.id)
    except:  
        await message.reply_text(
            f"<b>–Æ–∑–µ—Ä –Ω–µ —Å–º–æ–≥ –ø–æ–∫–∏–Ω—É—Ç—å –≥—Ä—É–ø–ø—É –∏–∑-–∑–∞ —Ñ–ª—É–¥–∞ –∫–æ–º–∞–Ω–¥–æ–π."
            "\n\nOr —è –≤—ã–≥–Ω–∞–Ω –≤ —Ä—É—á–Ω—É—é –∏–∑ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã</b>",
        )
        return
